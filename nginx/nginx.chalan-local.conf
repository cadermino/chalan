proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

upstream vuex_upstream {
  server vuex:8080;
}

upstream flask_upstream {
  server flask:8001;
}

server {
   listen 8000;

   server_name local.chalan.mx;
   server_tokens off;
   gzip on;
   gzip_proxied any;
   gzip_comp_level 4;
   gzip_types text/css application/javascript image/svg+xml;

   proxy_http_version 1.1;
   proxy_set_header Upgrade $http_upgrade;
   proxy_set_header Connection 'upgrade';
   proxy_set_header Host $host;
   proxy_cache_bypass $http_upgrade;
   # Define the specified charset to the “Content-Type” response header field
   charset utf-8;
    
   # Configure NGINX to reverse proxy HTTP requests to the upstream server (Gunicorn (WSGI server))
   location /api {
       # Define the location of the proxy server to send the request to
       proxy_pass http://flask_upstream;
 
       # Redefine the header fields that NGINX sends to the upstream server
       proxy_set_header Host $host;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 
       # Define the maximum file size on file uploads
       client_max_body_size 5M;
   }

   location /landing {
       # Define the location of the proxy server to send the request to
       proxy_pass http://flask_upstream;
 
       # Redefine the header fields that NGINX sends to the upstream server
       proxy_set_header Host $host;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 
       # Define the maximum file size on file uploads
       client_max_body_size 5M;
   }

   # Configure NGINX to deliver static content from the specified folder
   location / {
       proxy_pass http://vuex_upstream;
   }
}